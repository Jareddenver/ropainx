import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerPortalOrdersRetryPaymentSecurity = {
    customerSession: string;
};
export type CustomerPortalOrdersRetryPaymentRequest = {
    /**
     * The order ID.
     */
    id: string;
};
/** @internal */
export declare const CustomerPortalOrdersRetryPaymentSecurity$inboundSchema: z.ZodType<CustomerPortalOrdersRetryPaymentSecurity, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersRetryPaymentSecurity$Outbound = {
    customer_session: string;
};
/** @internal */
export declare const CustomerPortalOrdersRetryPaymentSecurity$outboundSchema: z.ZodType<CustomerPortalOrdersRetryPaymentSecurity$Outbound, z.ZodTypeDef, CustomerPortalOrdersRetryPaymentSecurity>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersRetryPaymentSecurity$ {
    /** @deprecated use `CustomerPortalOrdersRetryPaymentSecurity$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersRetryPaymentSecurity, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersRetryPaymentSecurity$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersRetryPaymentSecurity$Outbound, z.ZodTypeDef, CustomerPortalOrdersRetryPaymentSecurity>;
    /** @deprecated use `CustomerPortalOrdersRetryPaymentSecurity$Outbound` instead. */
    type Outbound = CustomerPortalOrdersRetryPaymentSecurity$Outbound;
}
export declare function customerPortalOrdersRetryPaymentSecurityToJSON(customerPortalOrdersRetryPaymentSecurity: CustomerPortalOrdersRetryPaymentSecurity): string;
export declare function customerPortalOrdersRetryPaymentSecurityFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersRetryPaymentSecurity, SDKValidationError>;
/** @internal */
export declare const CustomerPortalOrdersRetryPaymentRequest$inboundSchema: z.ZodType<CustomerPortalOrdersRetryPaymentRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersRetryPaymentRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const CustomerPortalOrdersRetryPaymentRequest$outboundSchema: z.ZodType<CustomerPortalOrdersRetryPaymentRequest$Outbound, z.ZodTypeDef, CustomerPortalOrdersRetryPaymentRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersRetryPaymentRequest$ {
    /** @deprecated use `CustomerPortalOrdersRetryPaymentRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersRetryPaymentRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersRetryPaymentRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersRetryPaymentRequest$Outbound, z.ZodTypeDef, CustomerPortalOrdersRetryPaymentRequest>;
    /** @deprecated use `CustomerPortalOrdersRetryPaymentRequest$Outbound` instead. */
    type Outbound = CustomerPortalOrdersRetryPaymentRequest$Outbound;
}
export declare function customerPortalOrdersRetryPaymentRequestToJSON(customerPortalOrdersRetryPaymentRequest: CustomerPortalOrdersRetryPaymentRequest): string;
export declare function customerPortalOrdersRetryPaymentRequestFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersRetryPaymentRequest, SDKValidationError>;
//# sourceMappingURL=customerportalordersretrypayment.d.ts.map