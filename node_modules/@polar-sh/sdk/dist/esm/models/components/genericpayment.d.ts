import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { PaymentProcessor } from "./paymentprocessor.js";
import { PaymentStatus } from "./paymentstatus.js";
/**
 * Additional metadata from the payment processor for internal use.
 */
export type GenericPaymentProcessorMetadata = {};
/**
 * Schema of a payment with a generic payment method.
 */
export type GenericPayment = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the object.
     */
    id: string;
    processor: PaymentProcessor;
    status: PaymentStatus;
    /**
     * The payment amount in cents.
     */
    amount: number;
    /**
     * The payment currency. Currently, only `usd` is supported.
     */
    currency: string;
    /**
     * The payment method used.
     */
    method: string;
    /**
     * Error code, if the payment was declined.
     */
    declineReason: string | null;
    /**
     * Human-reasable error message, if the payment was declined.
     */
    declineMessage: string | null;
    /**
     * The ID of the organization that owns the payment.
     */
    organizationId: string;
    /**
     * The ID of the checkout session associated with this payment.
     */
    checkoutId: string | null;
    /**
     * The ID of the order associated with this payment.
     */
    orderId: string | null;
    /**
     * Additional metadata from the payment processor for internal use.
     */
    processorMetadata?: GenericPaymentProcessorMetadata | undefined;
};
/** @internal */
export declare const GenericPaymentProcessorMetadata$inboundSchema: z.ZodType<GenericPaymentProcessorMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type GenericPaymentProcessorMetadata$Outbound = {};
/** @internal */
export declare const GenericPaymentProcessorMetadata$outboundSchema: z.ZodType<GenericPaymentProcessorMetadata$Outbound, z.ZodTypeDef, GenericPaymentProcessorMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GenericPaymentProcessorMetadata$ {
    /** @deprecated use `GenericPaymentProcessorMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GenericPaymentProcessorMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `GenericPaymentProcessorMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GenericPaymentProcessorMetadata$Outbound, z.ZodTypeDef, GenericPaymentProcessorMetadata>;
    /** @deprecated use `GenericPaymentProcessorMetadata$Outbound` instead. */
    type Outbound = GenericPaymentProcessorMetadata$Outbound;
}
export declare function genericPaymentProcessorMetadataToJSON(genericPaymentProcessorMetadata: GenericPaymentProcessorMetadata): string;
export declare function genericPaymentProcessorMetadataFromJSON(jsonString: string): SafeParseResult<GenericPaymentProcessorMetadata, SDKValidationError>;
/** @internal */
export declare const GenericPayment$inboundSchema: z.ZodType<GenericPayment, z.ZodTypeDef, unknown>;
/** @internal */
export type GenericPayment$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    processor: string;
    status: string;
    amount: number;
    currency: string;
    method: string;
    decline_reason: string | null;
    decline_message: string | null;
    organization_id: string;
    checkout_id: string | null;
    order_id: string | null;
    processor_metadata?: GenericPaymentProcessorMetadata$Outbound | undefined;
};
/** @internal */
export declare const GenericPayment$outboundSchema: z.ZodType<GenericPayment$Outbound, z.ZodTypeDef, GenericPayment>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GenericPayment$ {
    /** @deprecated use `GenericPayment$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GenericPayment, z.ZodTypeDef, unknown>;
    /** @deprecated use `GenericPayment$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GenericPayment$Outbound, z.ZodTypeDef, GenericPayment>;
    /** @deprecated use `GenericPayment$Outbound` instead. */
    type Outbound = GenericPayment$Outbound;
}
export declare function genericPaymentToJSON(genericPayment: GenericPayment): string;
export declare function genericPaymentFromJSON(jsonString: string): SafeParseResult<GenericPayment, SDKValidationError>;
//# sourceMappingURL=genericpayment.d.ts.map